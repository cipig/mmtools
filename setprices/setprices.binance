#!/usr/bin/perl

use warnings;
use LWP::UserAgent;
use JSON;
use File::Slurp qw( read_file );
use File::Basename;
use Digest::SHA qw(hmac_sha256_hex);

my $apikey = "";
my $seckey = "";
my $coin = $ARGV[0];
my $base = "BTC";
my $cwd = dirname($0);
my $json = read_file("$cwd/margins.conf");
my $marginsconf = decode_json($json);
my $quantity = $marginsconf->{$coin}{'quantity'};


sub latest_price {
    my $url = "https://api.binance.com/api/v3/ticker/price?symbol=".$coin.$base;
    my $ua = LWP::UserAgent->new;
    $ua->agent("Mozilla");
    $ua->timeout(15);
    my $req = HTTP::Request->new(GET => $url);
    $req->header('content-type' => 'application/json');
    my $resp = $ua->request($req);
        if ($resp->is_success) {
            return $resp->content;
        } else {
            print "\nHTTP GET url: ", $url, "\n";
            print "HTTP GET error code: ", $resp->code, "\n";
            print "HTTP GET error message: ", $resp->message, "\n";
        }
}


sub setprice {
    my $price = $_[2];
    my $bid = undef;
    my $ask = undef;
    my $command = undef;
    my $signature = undef;
    my $body = undef;
    my $ua = LWP::UserAgent->new;
    my $req = undef;
    my $resp = undef;

    $req = HTTP::Request->new(DELETE => 'https://api.binance.com/api/v3/order');
    $req->header('X-MBX-APIKEY' => $apikey);
    $command = "symbol=".$coin.$base."&origClientOrderId=mysellid&timestamp=".time()*1000;
    $signature = hmac_sha256_hex($command, $seckey);
    $body = $command."&signature=".$signature;
    $req->content($body);
    $resp = $ua->request($req);
    print $resp->content."\n";

    $command = "symbol=".$coin.$base."&origClientOrderId=mybuyid&timestamp=".time()*1000;
    $signature = hmac_sha256_hex($command, $seckey);
    $body = $command."&signature=".$signature;
    $req->content($body);
    $resp = $ua->request($req);
    print $resp->content."\n";

    if ( defined $marginsconf->{$_[1]}{'askmargin'} ) {
        $ask = sprintf("%.7f", $price + $price * $marginsconf->{$_[1]}{'askmargin'});
    }
    if ( defined $marginsconf->{$_[1]}{'bidmargin'} ) {
        $bid = sprintf("%.7f", ($price - $price * $marginsconf->{$_[1]}{'bidmargin'}));
    }

    $req = HTTP::Request->new(POST => 'https://api.binance.com/api/v3/order');
    $req->header('X-MBX-APIKEY' => $apikey);

    if ( defined $ask ) {
	$command = "symbol=".$coin.$base."&side=SELL&type=LIMIT_MAKER&newOrderRespType=FULL&quantity=".$quantity."&price=".$ask."&newClientOrderId=mysellid&timestamp=".time()*1000;
	$signature = hmac_sha256_hex($command, $seckey);
        $body = $command."&signature=".$signature;
        $req->content($body);
        my $resp = $ua->request($req);
        print $resp->content."\n";
    }

    if ( defined $bid ) {
        $command = "symbol=".$coin.$base."&side=BUY&type=LIMIT_MAKER&newOrderRespType=FULL&quantity=".$quantity."&price=".$bid."&newClientOrderId=mybuyid&timestamp=".time()*1000;
        $signature = hmac_sha256_hex($command, $seckey);
        $body = $command."&signature=".$signature;
        $req->content($body);
        $resp = $ua->request($req);
        print $resp->content."\n";
    }
}


if ( !defined $coin ) {
    print "Please specify coin: eg ./setprices KMD\n";
    exit 1;
}

my $price = decode_json(latest_price)->{'price'};
setprice($base,$coin,$price);
